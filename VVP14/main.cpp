//
//  main.cpp
//  VVP14
//
//  Created by Роберт Скиталинский on 12.01.2022.
//



//Даны целые положительные числа A и B (A < B). Вывести все целые числа от A до B включительно; при этом каждое число должно выводиться столько раз, каково его значение (например, число 3 выводится 3 раза).

#include <iostream>
#include <algorithm>
#include <iterator>
using namespace std;
/*
int main(){
    int a,b;
    cout << "Введите число А и В так чтобы А < B: ";
    cin >> a;
    cin >> b;
    for(int i = a; i <= b; i++){
        fill_n(ostream_iterator<int>(cout," "),i,i);
    }
}

//Даны положительные числа A и B (A > B). На отрезке длины A размещено максимально возможное количество отрезков длины B (без наложений). Не используя операции умножения и деления, найти длину незанятой части отрезка A.

int main(){
    int a,b;
    cout << "Введите число А и В так чтобы А > B: ";
    cin >> a;
    cin >> b;
    while (a >= b){
        a = a - b;
    }
    cout << a;
}
*/
//Дано целое число N (> 1). Вывести наименьшее из целых чисел K, для которых сумма 1 + 2 + . . . + K будет больше или равна N, и саму эту сумму.

int main ()

{
        int N, K = 0, S = 0;
        cout << "Введите целое значение N (N > 1): ";
        cin >> N;
        while (S < N)
        {
            ++K;
            S += K;
        }
        cout << "Наименьшее = " << K << endl << "Сумма = " << S  << endl;
 return 0;
}
/*
//Начальный вклад в банке равен 1000 руб. Через каждый месяц размер вклада увеличивается на P процентов от имеющейся суммы (P — вещественное число, 0 < P < 25). По данному P определить, через сколько месяцев размер вклада превысит 1100 руб., и вывести найденное количество месяцев K (целое число) и итоговый размер вклада S (вещественное число).
int main(){
    int k = 0;
    float d, p, s = 1000;
    cout << "Введите 0 < Р < 25: ";
    cin >> p;
    d = p / 100;
    for (int i = 1000; i <= 1100; i = (i * d) + i ){
        k = k + 1;
        s = s + (s * d);
    }
    cout << " Месяцев: " << k << endl << " Итоговая сумма: "<< s << endl;
    return 0;
}

//Даны целые положительные числа A и B. Найти их наибольший общий делитель (НОД), используя алгоритм Евклида

int NOD(int A, int B){
while (A!=B)
if (A>B) A-=B;
else B-=A;
return A;
}
int main (){
int A, B;
cout << "A: "; cin >> A;
cout<< "B: "; cin >> B;
cout << "НОД("<<A<<", " << B << ") = "<<NOD(A, B) << endl;
return 0;
}
*/
//Дано целое число N (> 1), являющееся числом Фибоначчи: N = FK. Найти целое число K — порядковый номер числа Фибоначчи N.
/*
int main() {
    int n;
    cout << "N: ";
    cin >> n;
    int f1 = 1, f2 = 1, f = 0, k = 2;
    while (f < n) {
        k++;
        f = f2 + f1;
        f2 = f1;
        f1 = f;
    }
    cout << "K: " << k;
    return 0;
}
*/
